{"version":3,"sources":["components/Header/Header.jsx","components/SerachBox/SearchBox.jsx","components/NameCard/NameCard.jsx","components/ResultsContainer/ResultsContainer.jsx","components/ModeButton/ModeButton.jsx","components/App/App.jsx","index.js"],"names":["Header","props","react_default","a","createElement","className","src","darkMode","alt","concat","headerExpanded","headTitle","SearchBox","_ref","handleInputChange","onChange","e","target","value","placeholder","NameCard","suggestedName","nameCheapUrl","href","ResultsContainer","suggestedNames","suggestedNamesJSX","map","components_NameCard_NameCard","key","style","backgroundColor","ModeButton","changeThemeMode","_useState","useState","_useState2","Object","slicedToArray","theme","setTheme","_useState3","_useState4","buttonTextColor","setButtonTextColor","type","color","name","require","App","state","headerText","document","getElementsByTagName","_this","setState","this","components_Header_Header","components_ModeButton_ModeButton","components_SerachBox_SearchBox","components_ResultsContainer_ResultsContainer","React","Component","ReactDOM","render","StrictMode","components_App_App","getElementById"],"mappings":"sKAoBeA,eAjBA,SAACC,GAKZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OACIE,IAAKL,EAAMM,SANL,0FACC,qFAMPC,IAAI,WACJH,UAAS,cAAAI,OAAgBR,EAAMS,eAAiB,sBAAwB,2BAE5ER,EAAAC,EAAAC,cAAA,MAAIC,UAAS,aAAAI,OAAeR,EAAMS,eAAiB,qBAAuB,yBAA2BT,EAAMU,cCAxGC,SAZG,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,kBACjB,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SACIW,SAAU,SAACC,GAAD,OAAOF,EAAkBE,EAAEC,OAAOC,QAC5CC,YAAY,gBACZd,UAAU,oBCOXe,eAbE,SAAAP,GAAuB,IAApBQ,EAAoBR,EAApBQ,cACVC,EAAY,kEAAAb,OAAqEY,GACvF,OACInB,EAAAC,EAAAC,cAAA,KAAGmB,KAAMD,EAAcjB,UAAU,YAAYY,OAAO,UAChDf,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eACRgB,OCONG,EAZU,SAAAX,GAAkC,IAA/BY,EAA+BZ,EAA/BY,eAAgBlB,EAAeM,EAAfN,SAElCmB,EAAoBD,EAAeE,IAAI,SAAAN,GACzC,OAAOnB,EAAAC,EAAAC,cAACwB,EAAD,CAAUC,IAAKR,EAAeA,cAAeA,GAA7C,OAGX,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoByB,MAAO,CAAEC,gBAAkBxB,EAAW,UAAY,UAChFmB,YCUEM,SAnBI,SAAAnB,GAAyB,IAAtBoB,EAAsBpB,EAAtBoB,gBAClBC,EAA0BC,mBAAS,SAAnCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOK,EAAPH,EAAA,GAAcI,EAAdJ,EAAA,GACAK,EAA8CN,mBAAS,WAAvDO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAOE,EAAPD,EAAA,GAAwBE,EAAxBF,EAAA,GACA,OACIxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SAAOyC,KAAK,WACR9B,SAAU,SAACC,GACPwB,EAAmB,SAAVD,EAAmB,QAAU,QACtCN,EAA0B,SAAVM,EAAmB,QAAU,QAC7CK,EAA6B,UAAVL,EAAoB,UAAY,YAE3DrC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAEpBH,EAAAC,EAAAC,cAAA,OAAK0B,MAAO,CAAEgB,MAAOH,IAAoBJ,MCV/CQ,EAAOC,EAAQ,IAiDNC,8MA7CXC,MAAQ,CACJC,WAAY,WACZzC,gBAAgB,EAChBe,eAAgB,GAChBlB,UAAU,KAGd0B,gBAAkB,SAACf,GACD,SAAVA,GACAkC,SAASC,qBAAqB,QAAQ,GAAGvB,MAAMC,gBAAkB,UACjEuB,EAAKC,SAAS,CACVhD,UAAU,MAGd6C,SAASC,qBAAqB,QAAQ,GAAGvB,MAAMC,gBAAkB,QACjEuB,EAAKC,SAAS,CACVhD,UAAU,QAKtBO,kBAAoB,SAACI,GACjBoC,EAAKC,SAAS,CACV7C,gBAAiBQ,EACjBO,eAAiBP,EAAa6B,EAAK7B,GAAV,kDAIjC,WACI,OACIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMyB,MAAO0B,KAAKN,MAAM3C,SAAW,CAAEwB,gBAAiB,WAAc,CAAEA,gBAAiB,UAClG7B,EAAAC,EAAAC,cAACqD,EAAD,CACI9C,UAAW6C,KAAKN,MAAMC,WACtBzC,eAAgB8C,KAAKN,MAAMxC,eAC3BH,SAAUiD,KAAKN,MAAM3C,WAEzBL,EAAAC,EAAAC,cAACsD,EAAD,CAAYzB,gBAAiBuB,KAAKvB,kBAClC/B,EAAAC,EAAAC,cAACuD,EAAD,CAAW7C,kBAAmB0C,KAAK1C,oBACnCZ,EAAAC,EAAAC,cAACwD,EAAD,CAAkBnC,eAAgB+B,KAAKN,MAAMzB,eAAgBlB,SAAUiD,KAAKN,MAAM3C,mBAxChFsD,IAAMC,WCLxBC,IAASC,OACP9D,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,WAAP,KACE/D,EAAAC,EAAAC,cAAC8D,EAAD,OAEFd,SAASe,eAAe","file":"static/js/main.c864834a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = (props) => {\n\n    const darkImage = \"https://github.com/Akashnani-star/gitpod1/blob/main/imageedit_7_9830005310.png?raw=true\";\n    const lightImage = \"https://github.com/Akashnani-star/gitpod1/raw/main/undraw_Domain_names_re_0uun.png\";\n\n    return (\n        <div className=\"head-container\">\n            <img\n                src={props.darkMode ? darkImage : lightImage}\n                alt=\"head-pic\"\n                className={`head-image ${props.headerExpanded ? \"head-image-expanded\" : \"head-image-contracted\"}`}\n            />\n            <h1 className={`head-text ${props.headerExpanded ? \"head-text-expanded\" : \"head-text-contracted\"}`}>{props.headTitle}</h1>\n        </div>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport \"./SearchBox.css\";\n\nconst SearchBox = ({ handleInputChange }) => {\n    return (\n        <div className=\"search-container\">\n            <input\n                onChange={(e) => handleInputChange(e.target.value)}\n                placeholder=\"Type keywords\"\n                className=\"search-input\"\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from \"react\";\nimport \"./NameCard.css\";\n\nconst NameCard = ({ suggestedName }) => {\n    const nameCheapUrl = `https://www.namecheap.com/domains/registration/results/?domain=${suggestedName}`\n    return (\n        <a href={nameCheapUrl} className=\"name-link\" target=\"_blank\">\n            <span className=\"result-name-card\">\n                <p className=\"result-name\">\n                    {suggestedName}\n                </p>\n            </span>\n        </a>\n    );\n}\n\nexport default NameCard;","import React from \"react\";\nimport \"./ResultsContainer.css\";\nimport NameCard from \"../NameCard/NameCard\";\n\nconst ResultsContainer = ({ suggestedNames, darkMode }) => {\n\n    const suggestedNamesJSX = suggestedNames.map(suggestedName => {\n        return <NameCard key={suggestedName} suggestedName={suggestedName}> </NameCard>\n    })\n\n    return (\n        <div className=\"results-container\" style={{ backgroundColor: (darkMode ? \"#2B2A3F\" : \"white\") }}>\n            {suggestedNamesJSX}\n        </div>\n    );\n}\nexport default ResultsContainer;","import React, { useState } from \"react\";\nimport \"./ModeButton.css\";\n\nconst ModeButton = ({ changeThemeMode }) => {\n    const [theme, setTheme] = useState(\"light\");\n    const [buttonTextColor, setButtonTextColor] = useState(\"#6C63FF\");\n    return (\n        <div className=\"mode-button-container\">\n            <label className=\"switch\">\n                <input type=\"checkbox\"\n                    onChange={(e) => {\n                        setTheme(theme === \"dark\" ? \"light\" : \"dark\");\n                        changeThemeMode(theme === \"dark\" ? \"light\" : \"dark\");\n                        setButtonTextColor(theme !== \"light\" ? \"#6C63FF\" : \"white\");\n                    }} />\n                <span className=\"slider round\"></span>\n            </label>\n            <div style={{ color: buttonTextColor }}>{theme}</div>\n        </div >\n    );\n}\n\nexport default ModeButton;","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"../Header/Header\";\nimport SearchBox from \"../SerachBox/SearchBox\";\nimport ResultsContainer from \"../ResultsContainer/ResultsContainer\";\nimport ModeButton from \"../ModeButton/ModeButton\";\n\nconst name = require('@rstacruz/startup-name-generator');\n\nclass App extends React.Component {\n\n    state = {\n        headerText: \"Name it!\",\n        headerExpanded: true,\n        suggestedNames: [],\n        darkMode: false,\n    }\n\n    changeThemeMode = (value) => {\n        if (value === \"dark\") {\n            document.getElementsByTagName(\"html\")[0].style.backgroundColor = \"#2B2A3F\";\n            this.setState({\n                darkMode: true,\n            });\n        } else {\n            document.getElementsByTagName(\"html\")[0].style.backgroundColor = \"white\";\n            this.setState({\n                darkMode: false,\n            });\n        }\n    }\n\n    handleInputChange = (value) => {\n        this.setState({\n            headerExpanded: !value,\n            suggestedNames: !value ? [] : name(value),\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\" style={this.state.darkMode ? { backgroundColor: \"#2B2A3F\" } : { backgroundColor: \"white\" }}>\n                <Header\n                    headTitle={this.state.headerText}\n                    headerExpanded={this.state.headerExpanded}\n                    darkMode={this.state.darkMode}\n                />\n                <ModeButton changeThemeMode={this.changeThemeMode} />\n                <SearchBox handleInputChange={this.handleInputChange}></SearchBox>\n                <ResultsContainer suggestedNames={this.state.suggestedNames} darkMode={this.state.darkMode} />\n            </div>\n        );\n    }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}